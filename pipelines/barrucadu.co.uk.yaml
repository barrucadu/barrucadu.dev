x-bookdb-tags: &x-bookdb-tags
  platform: linux
  image_resource:
    type: docker-image
    source:
      repository: alpine
  outputs:
    - name: tags
  run:
    path: sh
    args:
      - -cxe
      - |
        apk add --no-cache git jq
        mkdir -p tags/event
        mkdir -p tags/image
        cd in

        tag_name () {
          if [ -f docker_inspect.json ]; then
            jq -r '.[0].Config.Labels["barrucadu.tag.name"]' < docker_inspect.json
          else
            git rev-parse --short HEAD
          fi
        }

        tag_url () {
          if [ -f docker_inspect.json ]; then
            jq -r '.[0].Config.Labels["barrucadu.tag.url"]' < docker_inspect.json
          else
            echo "https://github.com/barrucadu/bookdb/commit/$(git rev-parse HEAD)"
          fi
        }

        summary () {
          if [ -f docker_inspect.json ]; then
            jq -r '.[0].Config.Labels["barrucadu.summary"]' < docker_inspect.json
          else
            git show -s --format=%s HEAD
          fi
        }

        tag_name > ../tags/event/tag
        tag_url > ../tags/event/tag_url
        summary > ../tags/event/description

        if [ -n "$PHASE" ]; then
          echo "$PHASE" > ../tags/event/phase
        fi

        jq -n --arg tag_name "$(tag_name)" --arg tag_url "$(tag_url)" --arg summary "$(summary)" > ../tags/image/labels \
           '{ "barrucadu.tag.name": $tag_name, "barrucadu.tag.url": $tag_url, "barrucadu.summary": $summary}'

x-bookdb-trigger-events: &x-bookdb-trigger-events
  on_success:
    put: bookdb-event-api
    params:
      path: tags/event
      status: Ok
  on_failure:
    put: bookdb-event-api
    params:
      path: tags/event
      status: Failure
  on_error:
    put: bookdb-event-api
    params:
      path: tags/event
      status: Error

x-bookdb-trigger-events-for-tag-task: &x-bookdb-trigger-events-for-tag-task
  on_failure:
    put: bookdb-event-api
    params:
      phase: tag
      description: Internal error, check build log.
      status: Error
  on_error:
    put: bookdb-event-api
    params:
      phase: tag
      description: Internal error, check build log.
      status: Error

resource_types:
- name: event-api-resource
  type: docker-image
  source:
    repository: registry.barrucadu.dev/event-api-resource
    username: registry
    password: {{docker-registry-password}}
- name: rsync-resource
  type: docker-image
  source:
    repository: registry.barrucadu.dev/rsync-resource
    username: registry
    password: {{docker-registry-password}}

resources:
- name: bookdb-git
  type: git
  source:
    uri: https://github.com/barrucadu/bookdb.git
- name: cv-git
  type: git
  source:
    uri: https://github.com/barrucadu/cv.git
- name: memo-git
  type: git
  source:
    uri: https://github.com/barrucadu/memo.barrucadu.co.uk.git
- name: www-git
  type: git
  source:
    uri: https://github.com/barrucadu/barrucadu.co.uk.git
- name: bookdb-image
  type: docker-image
  source:
    repository: registry.barrucadu.dev/bookdb
    username: registry
    password: {{docker-registry-password}}
- name: memo-rsync
  type: rsync-resource
  source:
    server: barrucadu.co.uk
    remote_dir: /srv/http/barrucadu.co.uk/memo
    private_key: {{dunwich-ssh-private-key}}
- name: www-rsync
  type: rsync-resource
  source:
    server: barrucadu.co.uk
    remote_dir: /srv/http/barrucadu.co.uk/www
    private_key: {{dunwich-ssh-private-key}}
- name: bookdb-event-api
  type: event-api-resource
  source:
    project: bookdb
    token: {{event-api-bookdb-token}}
- name: memo-event-api
  type: event-api-resource
  source:
    project: memo
    token: {{event-api-memo-token}}
- name: www-event-api
  type: event-api-resource
  source:
    project: www
    token: {{event-api-www-token}}

jobs:
- name: build-deploy-www
  public: true
  serial: true
  plan:
    - get: cv-git
      trigger: true
    - get: www-git
      trigger: true
    - task: Tag
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: alpine
        inputs:
          - name: cv-git
          - name: www-git
        outputs:
          - name: tags
        run:
          path: sh
          args:
            - -cxe
            - |
              apk add --no-cache git
              mkdir -p tags/build-cv
              mkdir -p tags/build-site
              mkdir -p tags/deploy

              cd cv-git
              echo "cv:$(git rev-parse --short HEAD)" > ../tags/build-cv/tag
              echo "https://github.com/barrucadu/cv/commit/$(git rev-parse HEAD)" > ../tags/build-cv/tag_url
              git show -s --format=%s HEAD > ../tags/build-cv/description
              echo "build" > ../tags/build-cv/phase

              cd ../www-git
              echo "site:$(git rev-parse --short HEAD)" > ../tags/build-site/tag
              echo "https://github.com/barrucadu/barrucadu.co.uk/commit/$(git rev-parse HEAD)" > ../tags/build-site/tag_url
              git show -s --format=%s HEAD > ../tags/build-site/description
              echo "build" > ../tags/build-site/phase

              cd ..
              echo "$(cat tags/build-cv/tag), $(cat tags/build-site/tag)" > tags/deploy/description
              echo "deploy" > tags/deploy/phase
      on_failure:
        put: www-event-api
        params:
          phase: tag
          description: Internal error, check build log.
          status: Error
      on_error:
        put: www-event-api
        params:
          phase: tag
          description: Internal error, check build log.
          status: Error
    - task: Build (site)
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: registry.barrucadu.dev/barrucadu.co.uk-builder
            username: registry
            password: {{docker-registry-password}}
        inputs:
          - name: www-git
        outputs:
          - name: site
        run:
          path: sh
          dir: www-git
          args:
            - -cex
            - |
              virtualenv venv
              source venv/bin/activate
              pip install -r requirements.txt
              ./build --out=../site/www
      on_success:
        put: www-event-api
        params:
          path: tags/build-site
          status: Ok
      on_failure:
        put: www-event-api
        params:
          path: tags/build-site
          status: Failure
      on_error:
        put: www-event-api
        params:
          path: tags/build-site
          status: Error
    - task: Build (cv)
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: registry.barrucadu.dev/barrucadu.co.uk-builder
            username: registry
            password: {{docker-registry-password}}
        inputs:
          - name: cv-git
          - name: site
        outputs:
          - name: site
        run:
          path: sh
          dir: cv-git
          args:
            - -cex
            - |
              latexmk -pdf -xelatex cv-full.tex
              mv cv-full.pdf ../site/www/cv.pdf
      on_success:
        put: www-event-api
        params:
          path: tags/build-cv
          status: Ok
      on_failure:
        put: www-event-api
        params:
          path: tags/build-cv
          status: Failure
      on_error:
        put: www-event-api
        params:
          path: tags/build-cv
          status: Error
    - put: www-rsync
      params:
        path: site/www
        rsync_args: ["--delete"]
      on_success:
        put: www-event-api
        params:
          path: tags/deploy
          status: Ok
      on_failure:
        put: www-event-api
        params:
          path: tags/deploy
          status: Error
      on_error:
        put: www-event-api
        params:
          path: tags/deploy
          status: Error

- name: build-deploy-memo
  public: true
  serial: true
  plan:
    - get: memo-git
      trigger: true
    - task: Tag
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: alpine
        inputs:
          - name: memo-git
        outputs:
          - name: tags
        run:
          path: sh
          args:
            - -cxe
            - |
              apk add --no-cache git

              cd memo-git
              git rev-parse --short HEAD > ../tags/tag
              echo "https://github.com/barrucadu/memo.barrucadu.co.uk/commit/$(git rev-parse HEAD)" > ../tags/tag_url
              git show -s --format=%s HEAD > ../tags/description
      on_failure:
        put: memo-event-api
        params:
          phase: tag
          description: Internal error, check build log.
          status: Error
      on_error:
        put: memo-event-api
        params:
          phase: tag
          description: Internal error, check build log.
          status: Error
    - task: Build
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: registry.barrucadu.dev/barrucadu.co.uk-builder
            username: registry
            password: {{docker-registry-password}}
        inputs:
          - name: memo-git
        outputs:
          - name: site
        run:
          path: sh
          dir: memo-git
          args:
            - -cex
            - |
              virtualenv venv
              source venv/bin/activate
              pip install -r requirements.txt
              PATH=.:$PATH ./build --out=../site/memo
      on_success:
        put: memo-event-api
        params:
          path: tags
          phase: build
          status: Ok
      on_failure:
        put: memo-event-api
        params:
          path: tags
          phase: build
          status: Failure
      on_error:
        put: memo-event-api
        params:
          path: tags
          phase: build
          status: Error
    - put: memo-rsync
      params:
        path: site/memo
        rsync_args: ["--delete"]
      on_success:
        put: memo-event-api
        params:
          path: tags
          phase: deploy
          status: Ok
      on_failure:
        put: memo-event-api
        params:
          path: tags
          phase: deploy
          status: Error
      on_error:
        put: memo-event-api
        params:
          path: tags
          phase: deploy
          status: Error
    - task: Notify
      params:
        PLEROMA_PASSWORD: {{pleroma-user-memo-password}}
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: python
            tag: 3.8
        inputs:
          - name: memo-git
        run:
          dir: memo-git
          path: sh
          args:
            - -cex
            - |
              pip install -r requirements.txt
              ./post-pleroma-status
      on_success:
        put: memo-event-api
        params:
          path: tags
          phase: notify
          status: Ok
      on_failure:
        put: memo-event-api
        params:
          path: tags
          phase: notify
          status: Error
      on_error:
        put: memo-event-api
        params:
          path: tags
          phase: notify
          status: Error

- name: build-bookdb
  public: true
  plan:
    - get: bookdb-git
      trigger: true
    - task: Tag
      <<: *x-bookdb-trigger-events-for-tag-task
      config:
        <<: *x-bookdb-tags
        inputs:
          - { name: bookdb-git, path: in }
        params:
          PHASE: build
    - put: bookdb-image
      params:
        build: bookdb-git/
        dockerfile: bookdb-git/Dockerfile
        labels_file: tags/image/labels
        tag_as_latest: true
      <<: *x-bookdb-trigger-events
- name: deploy-bookdb
  public: true
  serial: true
  plan:
    - get: bookdb-image
      trigger: true
      passed: [build-bookdb]
    - task: Tag
      <<: *x-bookdb-trigger-events-for-tag-task
      config:
        <<: *x-bookdb-tags
        inputs:
          - { name: bookdb-image, path: in }
        params:
          PHASE: deploy
    - task: Deploy
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: alpine
        params:
          SSH_PRIVATE_KEY: {{dunwich-ssh-private-key}}
        run:
          path: sh
          args:
            - -ce
            - |
              echo "$SSH_PRIVATE_KEY" > ssh-private-key
              chmod 600 ssh-private-key
              set -x
              apk add --no-cache openssh
              ssh -i ssh-private-key -o "StrictHostKeyChecking no" concourse-deploy-robot@barrucadu.co.uk sudo systemctl restart bookdb
      <<: *x-bookdb-trigger-events
